{"version":3,"sources":["components/Header.js","components/ReusableForm.js","components/NewEventForm.js","components/Event.js","components/EventList.js","components/EventDetail.js","components/EditEventForm.js","components/EventControl.js","actions/index.js","components/Signin.js","components/App.js","reportWebVitals.js","reducers/index.js","reducers/form-visible-reducer.js","actions/ActionType.js","reducers/event-list-reducer.js","firebase.js","index.js"],"names":["Header","style","border","borderRadius","backgroundColor","boxShadow","margin","padding","href","ReusableForm","props","TextStyle","width","height","marginTop","onSubmit","formSubmissionHandler","type","name","placeholder","buttonText","NewEventForm","firestore","useFirestore","event","preventDefault","onNewEventCreation","collection","add","date","target","value","time","duration","routermodel","troubleshooting","timeOpen","FieldValue","serverTimestamp","Event","onClick","whenEventClicked","id","EventList","useFirestoreConnect","orderBy","events","useSelector","state","ordered","isLoaded","slice","reverse","map","onEventSelection","formattedWaitTime","key","EventDetail","onClickingEdit","EditEventForm","onEditEvent","propertiesToUpdate","update","doc","ButtonStyle","EventControl","updateEventElapsedWaitTime","handleAddingNewEventToList","dispatch","handleClick","selectedEvent","setState","editing","handleChangingSelectedEvent","get","then","firestoreEvent","handleEditClick","handleEditingEventInList","handleDeletingEvent","delete","this","waitTimeUpdateTimer","setInterval","clearInterval","auth","firebase","currentUser","currentlyVisibleState","eventList","masterEventList","onClickingDelete","formVisibleOnPage","React","Component","connect","withFirestore","Signin","SignInStyle","email","signinEmail","password","signinPassword","signInWithEmailAndPassword","alert","catch","error","message","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","Object","assign","newState","firestoreReducer","firebaseConfig","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","REACT_APP_FIREBASE_SENDER_ID","appId","initializeApp","store","createStore","rrfProps","config","userProfile","useFirestoreForProfile","createFirestoreInstance","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2bdd25ec.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Header() {\r\n\r\n  const HeaderStyle = {\r\n    border: \"2px solid black\",\r\n    borderRadius: \"15px\",\r\n    backgroundColor: \"aliceblue\",\r\n    boxShadow: \"5px 10px #888888\",\r\n    margin: \"10px\",\r\n    padding: \"10px\"\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div style={HeaderStyle}>\r\n        <h1>XFINITY Outage Tracker</h1>\r\n        <p>Because there's no good reason that our internet should be this bad, yet here we are.</p>\r\n        <p><a href=\"https://nationaleconomicseditorial.com/2017/11/27/americans-fiber-optic-internet/\">Read</a>--\r\n          <a href=\"https://bgr.com/general/comcast-twc-customer-satisfaction-survey-study-3536122/\">About</a>--\r\n          <a href=\"https://arstechnica.com/information-technology/2020/01/ajit-pai-promised-faster-broadband-expansion-comcast-cut-spending-instead/\">Comcast </a>\r\n          and <a href=\"https://www.highspeedinternet.com/\">consider your options before buying</a></p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction ReusableForm(props) {\r\n\r\n  const ReusableFormStyle = {\r\n    border: \"2px solid black\",\r\n    borderRadius: \"15px\",\r\n    backgroundColor: \"aliceblue\",\r\n    boxShadow: \"5px 10px #888888\",\r\n    margin: \"10px\",\r\n    padding: \"10px\"\r\n  }\r\n\r\n  const TextStyle = {\r\n    borderRadius: \"15px\",\r\n    width: \"95%\",\r\n    height: \"30px\",\r\n    marginTop: \"10px\",\r\n    padding: \"15px\"\r\n  }\r\n\r\n  const TextAreaStyle = {\r\n    borderRadius: \"15px\",\r\n    width: \"95%\",\r\n    height: \"100px\",\r\n    marginTop: \"10px\",\r\n    padding: \"15px\"\r\n  }\r\n\r\n  const ButtonStyle = {\r\n    borderRadius: \"15px\",\r\n    backgroundColor: \"lightblue\",\r\n    width: \"100px\",\r\n    height: \"50px\",\r\n    marginTop: \"10px\"\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div style={ReusableFormStyle}>\r\n        <form onSubmit={props.formSubmissionHandler}>\r\n          <p>Date of Outage<br />\r\n            <input style={TextStyle}\r\n              type=\"text\"\r\n              name=\"date\"\r\n              placeholder=\"YYYY-MM-DD\"\r\n            />\r\n          </p>\r\n          <p>Time of Outage<br />\r\n            <input style={TextStyle}\r\n              type=\"text\"\r\n              name=\"time\"\r\n              placeholder=\"HH:MM\"\r\n            />\r\n          </p>\r\n          <p>Duration of Outage (if known)<br />\r\n            <input style={TextStyle}\r\n              type=\"text\"\r\n              name=\"duration\"\r\n              placeholder=\"Human-readable time\"\r\n            />\r\n          </p>\r\n          <p>Modem or Router Model<br />\r\n            <input style={TextStyle}\r\n              type=\"text\"\r\n              name=\"routermodel\"\r\n              placeholder=\"Model Name\"\r\n            />\r\n          </p>\r\n          <p>Describe troubleshooting steps taken, optionally with time spent on fix<br />\r\n            <textarea style={TextAreaStyle}\r\n              name=\"troubleshooting\"\r\n              placeholder=\"Describe troubleshooting steps taken in detail.\"\r\n            /><br />\r\n            <button type=\"submit\" style={ButtonStyle}>{props.buttonText}</button>\r\n          </p>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nReusableForm.propTypes = {\r\n  formSubmissionHandler: PropTypes.func,\r\n  buttonText: PropTypes.string\r\n};\r\n\r\nexport default ReusableForm;","import React from \"react\";\r\n// import { v4 } from 'uuid';\r\nimport PropTypes from \"prop-types\";\r\nimport ReusableForm from \"./ReusableForm\";\r\nimport { useFirestore } from 'react-redux-firebase'\r\n\r\nfunction NewEventForm(props) {\r\n\r\n  const NewEventStyle = {\r\n    border: \"2px solid black\",\r\n    borderRadius: \"15px\",\r\n    backgroundColor: \"aliceblue\",\r\n    boxShadow: \"5px 10px #888888\",\r\n    margin: \"10px\",\r\n    padding: \"10px\"\r\n  }\r\n\r\n  // We add the useFirestore() hook to make Firestore available to our component. (Make sure it lives *inside* the NewEventForm component.)\r\n  const firestore = useFirestore();\r\n\r\n  // Note that we updated the name of the function for adding a event to addEventToFirestore. This is a more accurate name for what the function will do now.\r\n  function addEventToFirestore(event) {\r\n    event.preventDefault();\r\n\r\n    // We will still need our onNewEventCreation() method to toggle between components - but it will no longer take an argument because it no longer handles creating a event.\r\n    props.onNewEventCreation();\r\n\r\n    // Here's how we will actually add a event to Firestore.\r\n\r\n    return firestore.collection('events').add(\r\n      {\r\n        date: event.target.date.value,\r\n        time: event.target.time.value,\r\n        duration: event.target.duration.value,\r\n        routermodel: event.target.routermodel.value,\r\n        troubleshooting: event.target.troubleshooting.value,\r\n        timeOpen: firestore.FieldValue.serverTimestamp()\r\n      }\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div style={NewEventStyle}>\r\n        <ReusableForm\r\n          // Don't forget to change the name of the function here as well.\r\n          formSubmissionHandler={addEventToFirestore}\r\n          buttonText=\"Log This Event\" />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nNewEventForm.propTypes = {\r\n  onNewEventCreation: PropTypes.func\r\n};\r\n\r\nexport default NewEventForm;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Event(props) {\r\n\r\n  const EventStyle = {\r\n    border: \"2px solid black\",\r\n    borderRadius: \"15px\",\r\n    backgroundColor: \"aliceblue\",\r\n    boxShadow: \"5px 10px #888888\",\r\n    margin: \"10px\",\r\n    padding: \"10px\"\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div style={EventStyle} onClick={() => props.whenEventClicked(props.id)}>\r\n        <p>{props.date} - {props.time}</p>\r\n        <p>Outage Duration: <em>{props.duration}</em></p>\r\n        <p>Router/Model: <em>{props.routermodel}</em></p>\r\n        <p>Additional Notes/Troubleshooting: <em>{props.troubleshooting}</em></p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nEvent.propTypes = {\r\n  date: PropTypes.string,\r\n  time: PropTypes.string,\r\n  duration: PropTypes.string,\r\n  routermodel: PropTypes.string,\r\n  troubleshooting: PropTypes.string,\r\n  id: PropTypes.string,\r\n  whenEventClicked: PropTypes.func\r\n};\r\n\r\nexport default Event;","import React from \"react\";\r\nimport PropTypes from 'prop-types'\r\nimport Event from \"../components/Event\"\r\n// We need to import hooks functionality from both react-redux and react-redux-firebase.\r\nimport { useSelector } from 'react-redux'\r\nimport { useFirestoreConnect, isLoaded } from 'react-redux-firebase'\r\n\r\n\r\nfunction EventList(props) {\r\n\r\n  const EventListStyle = {\r\n    border: \"2px solid black\",\r\n    borderRadius: \"15px\",\r\n    backgroundColor: \"aliceblue\",\r\n    boxShadow: \"5px 10px #888888\",\r\n    margin: \"10px\",\r\n    padding: \"10px\"\r\n  }\r\n\r\n  // The useFirestoreConnect() hook comes from react-redux-firebase.\r\n  useFirestoreConnect([\r\n    {\r\n      collection: 'events',\r\n      orderBy: 'date',\r\n    }\r\n  ]);\r\n\r\n  // The useSelector() hook comes from react-redux.\r\n  // const events = useSelector(state => state.firestore.ordered.events);\r\n  const events = useSelector(state => state.firestore.ordered.events);\r\n\r\n  // const sortedData = events.sort((a, b) => a.date.localeCompare(b.date));\r\n\r\n  // react-redux-firebase also offers a useful isLoaded() function.\r\n  if (isLoaded(events)) {\r\n    return (\r\n      <>\r\n        <div style={EventListStyle}>\r\n          {events.slice(0).reverse().map((event) => {\r\n            return <Event\r\n              whenEventClicked={props.onEventSelection}\r\n              date={event.date}\r\n              time={event.time}\r\n              duration={event.duration}\r\n              routermodel={event.routermodel}\r\n              troubleshooting={event.troubleshooting}\r\n              formattedWaitTime={event.formattedWaitTime}\r\n              id={event.id}\r\n              key={event.id} />\r\n          })}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n  else {\r\n    return (\r\n      <>\r\n        <h3>Loading...</h3>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nEventList.propTypes = {\r\n  onEventSelection: PropTypes.func\r\n};\r\n\r\nexport default EventList;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction EventDetail(props) {\r\n  const { event } = props;\r\n\r\n  const EventDetailStyle = {\r\n    border: \"2px solid black\",\r\n    borderRadius: \"15px\",\r\n    backgroundColor: \"aliceblue\",\r\n    boxShadow: \"5px 10px #888888\",\r\n    margin: \"10px\",\r\n    padding: \"10px\"\r\n  }\r\n\r\n  const ButtonStyle = {\r\n    borderRadius: \"15px\",\r\n    backgroundColor: \"lightblue\",\r\n    width: \"150px\",\r\n    height: \"50px\",\r\n    marginTop: \"10px\"\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div style={EventDetailStyle}>\r\n        <h1>Event Detail</h1>\r\n        <p>{event.date} - {event.time}</p>\r\n        <p>Outage Duration: <em>{event.duration}</em></p>\r\n        <p>Router/Model: <em>{event.routermodel}</em></p>\r\n        <p>Additional Notes/Troubleshooting: <em>{event.troubleshooting}</em></p>\r\n        <button onClick={props.onClickingEdit} style={ButtonStyle}>Update Event's Details</button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nEventDetail.propTypes = {\r\n  event: PropTypes.object,\r\n  onClickingDelete: PropTypes.func,\r\n  onClickingEdit: PropTypes.func\r\n};\r\n\r\nexport default EventDetail;","import React from \"react\";\r\nimport ReusableForm from \"./ReusableForm\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useFirestore } from 'react-redux-firebase';\r\n\r\nfunction EditEventForm(props) {\r\n  // Props are arguments passed into React components.\r\n  // Props are also how you pass data from one component to another, as parameters.\r\n  // Props can also be objects\r\n  // React Props are read-only! You will get an error if you try to change their value.\r\n\r\n  const EditEventStyle = {\r\n    border: \"2px solid black\",\r\n    borderRadius: \"15px\",\r\n    backgroundColor: \"aliceblue\",\r\n    boxShadow: \"5px 10px #888888\",\r\n    margin: \"10px\",\r\n    padding: \"10px\"\r\n  }\r\n\r\n  // const { event } = props;\r\n  const firestore = useFirestore();\r\n\r\n  function handleEditEventFormSubmission(event) {\r\n    event.preventDefault();\r\n    props.onEditEvent();\r\n    const propertiesToUpdate = {\r\n      date: event.target.date.value,\r\n      time: event.target.time.value,\r\n      duration: event.target.duration.value,\r\n      routermodel: event.target.routermodel.value,\r\n      troubleshooting: event.target.troubleshooting.value\r\n    }\r\n    return firestore.update({ collection: 'events', doc: event.id }, propertiesToUpdate)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div style={EditEventStyle}>\r\n        <ReusableForm\r\n          formSubmissionHandler={handleEditEventFormSubmission}\r\n          buttonText=\"Update Event\" />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nEditEventForm.propTypes = {\r\n  event: PropTypes.object,\r\n  onEditEvent: PropTypes.func\r\n};\r\n\r\nexport default EditEventForm;","import React from \"react\";\r\nimport NewEventForm from \"./NewEventForm\";\r\nimport EventList from \"./EventList\";\r\nimport EventDetail from \"./EventDetail\";\r\nimport EditEventForm from \"./EditEventForm\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport * as a from \"../actions\";\r\nimport { withFirestore, isLoaded } from \"react-redux-firebase\";\r\n\r\nconst ButtonStyle = {\r\n  borderRadius: \"15px\",\r\n  backgroundColor: \"lightblue\",\r\n  width: \"100px\",\r\n  height: \"50px\",\r\n  marginTop: \"10px\"\r\n}\r\n\r\nclass EventControl extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    // console.log(props);\r\n    this.state = {\r\n      selectedEvent: null,\r\n      editing: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.waitTimeUpdateTimer = setInterval(() =>\r\n      this.updateEventElapsedWaitTime(),\r\n      1000\r\n    );\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    // console.log(\"component updated!\");\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // console.log(\"component unmounted!\");\r\n    clearInterval(this.waitTimeUpdateTimer);\r\n  }\r\n\r\n  updateEventElapsedWaitTime = () => {\r\n    // console.log(\"tick\");\r\n  }\r\n\r\n  handleAddingNewEventToList = () => {\r\n    const { dispatch } = this.props;\r\n    const action = a.toggleForm();\r\n    dispatch(action);\r\n  }\r\n\r\n  handleClick = () => {\r\n    if (this.state.selectedEvent != null) {\r\n      this.setState({\r\n        selectedEvent: null,\r\n        editing: false\r\n      });\r\n    } else {\r\n      const { dispatch } = this.props;\r\n      const action = a.toggleForm();\r\n      dispatch(action);\r\n    }\r\n  }\r\n\r\n  handleChangingSelectedEvent = (id) => {\r\n    this.props.firestore.get({ collection: \"events\", doc: id }).then((event) => {\r\n      const firestoreEvent = {\r\n        date: event.get(\"date\"),\r\n        time: event.get(\"time\"),\r\n        duration: event.get(\"duration\"),\r\n        routermodel: event.get(\"routermodel\"),\r\n        troubleshooting: event.get(\"troubleshooting\"),\r\n        id: event.id\r\n      }\r\n      this.setState({ selectedEvent: firestoreEvent });\r\n    });\r\n  }\r\n\r\n  handleEditClick = () => {\r\n    // console.log(\"handleEditClick reached!\");\r\n    this.setState({ editing: true });\r\n  }\r\n\r\n  handleEditingEventInList = () => {\r\n    this.setState({\r\n      editing: false,\r\n      selectedEvent: null\r\n    });\r\n  }\r\n\r\n  handleDeletingEvent = (id) => {\r\n    this.props.firestore.delete({ collection: \"events\", doc: id });\r\n    this.setState({ selectedEvent: null });\r\n  }\r\n\r\n  render() {\r\n    const auth = this.props.firebase.auth();\r\n    if (!isLoaded(auth)) {\r\n      return (\r\n        <>\r\n          <p>Loading...</p>\r\n        </>\r\n      )\r\n    }\r\n    // if ((isLoaded(auth)) && (auth.currentUser == null)) {\r\n    //   return (\r\n    //     <>\r\n    //       <p>Please sign in to view events</p>\r\n    //     </>\r\n    //   )\r\n    // }\r\n    if ((isLoaded(auth)) && (auth.currentUser == null)) {\r\n      let currentlyVisibleState = <EventList eventList={this.props.masterEventList} onEventSelection={this.handleChangingSelectedEvent} />;\r\n      return (\r\n        <>\r\n          {currentlyVisibleState}\r\n          {/* <button onClick={this.handleClick} style={ButtonStyle}>{buttonText}</button> */}\r\n        </>\r\n      );\r\n    }\r\n    if ((isLoaded(auth)) && (auth.currentUser != null)) {\r\n      let currentlyVisibleState = null;\r\n      let buttonText = null;\r\n\r\n      if (this.state.editing) {\r\n        currentlyVisibleState = <EditEventForm event={this.state.selectedEvent} onEditEvent={this.handleEditingEventInList} />\r\n        buttonText = \"Return to Event Log\";\r\n      } else if (this.state.selectedEvent != null) {\r\n        currentlyVisibleState =\r\n          <EventDetail\r\n            event={this.state.selectedEvent}\r\n            onClickingDelete={this.handleDeletingEvent}\r\n            onClickingEdit={this.handleEditClick} />\r\n        buttonText = \"Return to Event Log\";\r\n      }\r\n      else if (this.props.formVisibleOnPage) {\r\n        currentlyVisibleState = <NewEventForm onNewEventCreation={this.handleAddingNewEventToList} />;\r\n        buttonText = \"Return to Event Log\";\r\n      } else {\r\n        currentlyVisibleState = <EventList eventList={this.props.masterEventList} onEventSelection={this.handleChangingSelectedEvent} />;\r\n        buttonText = \"Add Event\";\r\n      }\r\n      return (\r\n        <>\r\n          {currentlyVisibleState}\r\n          <button onClick={this.handleClick} style={ButtonStyle}>{buttonText}</button>\r\n        </>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nEventControl.propTypes = {\r\n  masterEventList: PropTypes.object,\r\n  formVisibleOnPage: PropTypes.bool\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    masterEventList: state.masterEventList,\r\n    formVisibleOnPage: state.formVisibleOnPage\r\n  }\r\n}\r\n\r\nEventControl = connect(mapStateToProps)(EventControl);\r\n\r\nexport default withFirestore(EventControl);","export const deleteEvent = id => ({\r\n  type: 'DELETE_EVENT',\r\n  id\r\n});\r\n\r\nexport const toggleForm = () => ({\r\n  type: 'TOGGLE_FORM'\r\n});\r\n\r\nexport const addEvent = (event) => {\r\n  const { date, time, duration, routermodel, troubleshooting, id } = event;\r\n  return {\r\n    type: 'ADD_EVENT',\r\n    date: date,\r\n    time: time,\r\n    duration: duration,\r\n    routermodel: routermodel,\r\n    troubleshooting: troubleshooting,\r\n    id: id\r\n  }\r\n}","import React from \"react\";\r\nimport firebase from \"firebase/app\";\r\n\r\nfunction Signin() {\r\n\r\n  const SignInStyle = {\r\n    border: \"2px solid black\",\r\n    borderRadius: \"15px\",\r\n    backgroundColor: \"aliceblue\",\r\n    boxShadow: \"5px 10px #888888\",\r\n    margin: \"10px\",\r\n    padding: \"10px\"\r\n  }\r\n\r\n  const TextStyle = {\r\n    borderRadius: \"15px\",\r\n    width: \"95%\",\r\n    height: \"30px\",\r\n    marginTop: \"10px\",\r\n    padding: \"15px\"\r\n  }\r\n\r\n  const ButtonStyle = {\r\n    borderRadius: \"15px\",\r\n    backgroundColor: \"lightblue\",\r\n    width: \"100px\",\r\n    height: \"50px\",\r\n    marginTop: \"10px\"\r\n  }\r\n\r\n  function doSignIn(event) {\r\n    event.preventDefault();\r\n    const email = event.target.signinEmail.value;\r\n    const password = event.target.signinPassword.value;\r\n    firebase.auth().signInWithEmailAndPassword(email, password).then(function () {\r\n      alert(\"Successfully signed in!\");\r\n    }).catch(function (error) {\r\n      alert(error.message);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div style={SignInStyle}>\r\n        <form onSubmit={doSignIn} style={SignInStyle}>\r\n          <p>Sign In :\r\n            <input style={TextStyle}\r\n              type=\"text\"\r\n              name=\"signinEmail\"\r\n              placeholder=\"email\" />\r\n            <input style={TextStyle}\r\n              type=\"password\"\r\n              name=\"signinPassword\"\r\n              placeholder=\"Password\" />\r\n            <button type=\"submit\" style={ButtonStyle}>Sign in</button>\r\n          </p>\r\n        </form>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Signin","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport EventControl from \"./EventControl\";\r\nimport Signin from \"./Signin\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n\r\n  const AppStyle = {\r\n    border: \"2px solid black\",\r\n    borderRadius: \"15px\",\r\n    backgroundColor: \"aliceblue\",\r\n    boxShadow: \"5px 10px #888888\",\r\n    margin: \"10px\",\r\n    padding: \"10px\"\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div style={AppStyle}>\r\n        <Router>\r\n          <Header />\r\n          <Switch>\r\n            <Route path=\"/signin\">\r\n              <Signin />\r\n            </Route>\r\n            <Route path=\"/\">\r\n              <EventControl />\r\n            </Route>\r\n          </Switch>\r\n        </Router>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import formVisibleReducer from './form-visible-reducer';\r\nimport eventListReducer from './event-list-reducer';\r\nimport { combineReducers } from 'redux';\r\n\r\nimport { firestoreReducer } from 'redux-firestore';\r\n\r\nconst rootReducer = combineReducers({\r\n  formVisibleOnPage: formVisibleReducer,\r\n  masterEventList: eventListReducer,\r\n  // new line of code below\r\n  firestore: firestoreReducer\r\n});\r\n\r\nexport default rootReducer;","import * as c from './../actions/ActionType';\r\n\r\nexport default (state = false, action) => {\r\n  switch (action.type) {\r\n    case c.TOGGLE_FORM:\r\n      return !state;\r\n    default:\r\n      return state;\r\n  }\r\n};","export const ADD_EVENT = 'ADD_EVENT';\r\nexport const DELETE_EVENT = 'DELETE_EVENT';\r\nexport const TOGGLE_FORM = 'TOGGLE_FORM';\r\nexport const UPDATE_TIME = 'UPDATE_TIME';","export default (state = {}, action) => {\r\n  const { date, time, duration, routermodel, troubleshooting, id } = action;\r\n  switch (action.type) {\r\n    case 'ADD_EVENT':\r\n      return Object.assign({}, state, {\r\n        [id]: {\r\n          date: date,\r\n          time: time,\r\n          duration: duration,\r\n          routermodel: routermodel,\r\n          troubleshooting: troubleshooting,\r\n          id: id\r\n        }\r\n      });\r\n    case 'DELETE_EVENT':\r\n      let newState = { ...state };\r\n      delete newState[id];\r\n      return newState;\r\n    default:\r\n      return state;\r\n  }\r\n};","import firebase from 'firebase/app'\r\nimport 'firebase/firestore';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID\r\n}\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.firestore();\r\n\r\nexport default firebase;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { createStore } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport rootReducer from './reducers/index';\r\nimport { ReactReduxFirebaseProvider } from 'react-redux-firebase';\r\nimport { createFirestoreInstance } from 'redux-firestore';\r\nimport firebase from \"./firebase\";\r\nimport 'firebase/auth';\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nconst rrfProps = {\r\n  firebase,\r\n  config: {\r\n    userProfile: \"users\",\r\n    useFirestoreForProfile: true,\r\n  },\r\n  dispatch: store.dispatch,\r\n  createFirestoreInstance\r\n}\r\n\r\n// store.subscribe(() =>\r\n//   console.log(store.getState())\r\n// );\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <ReactReduxFirebaseProvider {...rrfProps}>\r\n      <App />\r\n    </ReactReduxFirebaseProvider>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();"],"sourceRoot":""}